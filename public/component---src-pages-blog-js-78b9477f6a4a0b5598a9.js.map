{"version":3,"sources":["webpack:///./src/pages/blog.js"],"names":["masonryOptions","transitionDuration","fitWidth","imagesLoadedOptions","background","PageBlog","blogPost","data","allMarkdownRemark","edges","React","useEffect","AOS","init","duration","once","title","className","id","data-aos","elementType","options","disableImagesLoaded","updateOnEachImageLoad","map","index","node","frontmatter","fields","slug","thumbnail","publicURL","category","key","data-aos-delay","src","alt","href","pageQuery"],"mappings":"2FAAA,4IAQMA,GARN,UAQuB,CACrBC,mBAAoB,EACpBC,UAAU,IAGNC,EAAsB,CAAEC,WAAY,mBAsD3BC,UArDE,SAAC,GAAc,IACxBC,EADuB,EAAXC,KACIC,kBAAkBC,MAQxC,OANAC,IAAMC,WAAU,WACdC,IAAIC,KAAK,CACPC,SAAU,IACVC,MAAM,OAIR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,aACX,6BAASC,UAAU,4BAA4BC,GAAG,oBAChD,yBAAKD,UAAU,aACb,yBAAKA,UAAU,mCACb,yBAAKE,WAAS,UAAUF,UAAU,yCAChC,0BAAMA,UAAU,cAAhB,mBACA,wBAAIA,UAAU,QAAd,WACA,iEAGJ,kBAAC,IAAD,CACEA,UAAW,mBACXG,YAAa,MACbC,QAASrB,EACTsB,qBAAqB,EACrBC,uBAAuB,EACvBpB,oBAAqBA,GAEpBG,EAASkB,KAAI,WAAWC,GAAW,IAAnBC,EAAkB,EAAlBA,KACTV,EAAQU,EAAKC,YAAYX,OAASU,EAAKE,OAAOC,KAC9CA,EAAOH,EAAKE,OAAOC,KACnBC,EAAYJ,EAAKC,YAAYG,UAAYJ,EAAKC,YAAYG,UAAUC,UAAY,GAChFC,EAAWN,EAAKC,YAAYK,UAAY,YAC9C,OACE,yBAAKf,UAAU,UAAUgB,IAAKR,GAC5B,yBAAKN,WAAS,UAAUe,iBAAwB,IAART,EAAaR,UAAU,mFAC7D,yBAAKA,UAAU,iBAAgB,yBAAKkB,IAAKL,EAAWM,IAAKpB,KACzD,yBAAKC,UAAU,YACf,yBAAKA,UAAU,wBACb,4BAAI,uBAAGoB,KAAMR,GAAOb,IACpB,8BAAOgB,cAatB,IAAMM,EAAS","file":"component---src-pages-blog-js-78b9477f6a4a0b5598a9.js","sourcesContent":["import React from 'react';\nimport { Container } from \"react-bootstrap\"\nimport Layout from \"../components/layout\"\nimport Masonry from 'react-masonry-component';\nimport SEO from \"../components/seo\"\nimport AOS from \"aos\"\nimport \"aos/dist/aos.css\"\n\nconst masonryOptions = {\n  transitionDuration: 0,\n  fitWidth: true,\n};\n\nconst imagesLoadedOptions = { background: '.my-bg-image-el' }\nconst PageBlog = ({ data }) => {\n  const blogPost = data.allMarkdownRemark.edges\n\n  React.useEffect(() => {\n    AOS.init({\n      duration: 1000,\n      once: true,\n    })\n  })\n  return (\n    <Layout>\n      <SEO title=\"Projects\" />\n      <section className=\"arja-section arja-project\" id=\"projects-section\">\n        <div className=\"container\">\n          <div className=\"row justify-content-center pb-5\">\n            <div data-aos='fade-up' className=\"col-md-12 heading-section text-center\">\n              <span className=\"subheading\">Accomplishments</span>\n              <h2 className=\"mb-4\">My Blog</h2>\n              <p>Some of my thoughts and feelings</p>\n            </div>\n          </div>\n          <Masonry\n            className={'my-gallery-class'} // default ''\n            elementType={'div'} // default 'div'\n            options={masonryOptions} // default {}\n            disableImagesLoaded={false} // default false\n            updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\n            imagesLoadedOptions={imagesLoadedOptions} // default {}\n          >\n            {blogPost.map(({ node }, index) => {\n              const title = node.frontmatter.title || node.fields.slug\n              const slug = node.fields.slug\n              const thumbnail = node.frontmatter.thumbnail ? node.frontmatter.thumbnail.publicURL : ''\n              const category = node.frontmatter.category || \"Academics\"\n              return (\n                <div className=\"project\" key={index}>\n                  <div data-aos='fade-up' data-aos-delay={index * 200} className=\"image-element-class  img img-2 d-flex justify-content-center align-items-center\">\n                    <div className=\"project-thumb\"><img src={thumbnail} alt={title} /></div>\n                    <div className=\"overlay\"></div>\n                    <div className=\"text text-center p-4\">\n                      <h3><a href={slug}>{title}</a></h3>\n                      <span>{category}</span>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </Masonry>\n        </div>\n      </section>\n    </Layout>\n  );\n}\nexport default PageBlog\nexport const pageQuery = graphql`\n  query PageBlog{\n    allMarkdownRemark(filter: { fields: { collection: { eq: \"blog\" } } }\n    limit: 6) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            thumbnail {\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}